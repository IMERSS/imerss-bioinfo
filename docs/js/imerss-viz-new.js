"use strict";!function(){var Assert={GE:function(key,value,bound){if(!Number.isInteger(value))throw new Error(key+" must be an integer");if(!Number.isInteger(bound))throw new Error(key+" bound not an integer");if(value<bound)throw new Error(key+" must be at least "+bound)},LE:function(key,value,bound){if(!Number.isInteger(value))throw new Error(key+" must be an integer");if(!Number.isInteger(bound))throw new Error(key+" bound not an integer");if(value>bound)throw new Error(key+" must be at most "+bound)},P2:function(key,value){if(!Number.isInteger(value))throw new Error(key+" must be an integer");if(value<=0)throw new Error(key+" must be greater than 0");if(value&value-1)throw new Error(key+" must be a power of 2")}},H1=0,H2=0;function Hash(key,keyOffset,keySize){for(var h1=0,h2=0,i=0;i<keySize;)h1^=TABLE[(0+(i<<1)<<8)+key[keyOffset+i+0]]^TABLE[(1+(i<<1)<<8)+key[keyOffset+i+1]]^TABLE[(2+(i<<1)<<8)+key[keyOffset+i+2]]^TABLE[(3+(i<<1)<<8)+key[keyOffset+i+3]],h2^=TABLE[(4+(i<<1)<<8)+key[keyOffset+i+0]]^TABLE[(5+(i<<1)<<8)+key[keyOffset+i+1]]^TABLE[(6+(i<<1)<<8)+key[keyOffset+i+2]]^TABLE[(7+(i<<1)<<8)+key[keyOffset+i+3]],i+=4;H1=h1,H2=h2}var table,SLOT=function(){for(var table=new Uint8Array(256),index=0;index<table.length;index++){for(var slot=0;slot<8&&0!=(index&1<<slot);slot++);table[index]=slot}return table}(),TABLE=(table=new Int32Array(16384),crypto.getRandomValues(table),table),VALUE=new Uint8Array(0);function HashTable(keySize,valueSize,elementsMin=1024,elementsMax=0){if(Assert.GE("keySize",keySize,HashTable.KEY_MIN),Assert.LE("keySize",keySize,HashTable.KEY_MAX),keySize%4)throw new Error("keySize must be a multiple of 4");Assert.GE("valueSize",valueSize,HashTable.VALUE_MIN),Assert.LE("valueSize",valueSize,HashTable.VALUE_MAX),Assert.GE("elementsMin",elementsMin,HashTable.ELEMENTS_MIN),Assert.LE("elementsMin",elementsMin,HashTable.ELEMENTS_MAX),0===elementsMax&&(elementsMax=Math.max(elementsMin+4194304,1024*elementsMin),elementsMax=Math.min(elementsMax,HashTable.ELEMENTS_MAX)),Assert.GE("elementsMax",elementsMax,1),Assert.GE("elementsMax",elementsMax,elementsMin),Assert.LE("elementsMax",elementsMax,HashTable.ELEMENTS_MAX);var capacityMin=HashTable.capacity(elementsMin),capacityMax=HashTable.capacity(elementsMax),buffers=HashTable.buffers(keySize,valueSize,capacityMax);Assert.GE("buffers",buffers,HashTable.BUFFERS_MIN),Assert.LE("buffers",buffers,HashTable.BUFFERS_MAX),Assert.P2("buffers",buffers);var buckets=HashTable.buckets(capacityMin,buffers);if(buckets>HashTable.BUCKETS_MAX&&(buckets=HashTable.BUCKETS_MAX),Assert.GE("buckets",buckets,HashTable.BUCKETS_MIN),Assert.LE("buckets",buckets,HashTable.BUCKETS_MAX),Assert.P2("buckets",buckets),this.keySize=keySize,this.valueSize=valueSize,this.bucket=HashTable.bucket(keySize,valueSize),this.capacity=buffers*buckets*8,this.length=0,this.mask=buffers-1,this.mode=0,this.capacity<elementsMin||this.bucket*buckets>HashTable.BUFFER_MAX)throw new Error(HashTable.ERROR_MAXIMUM_CAPACITY_EXCEEDED);this.tables=new Array(buffers);for(var offset=0;offset<buffers;offset++)this.tables[offset]=new Table(keySize,valueSize,this.bucket,buckets)}function Table(keySize,valueSize,bucket,buckets){this.keySize=keySize,this.valueSize=valueSize,this.bucket=bucket,this.buckets=buckets,this.buffer=new Uint8Array(this.bucket*this.buckets),this.copyKey=this.copy(keySize)||this.copyKeyGeneric,this.copyValue=this.copy(valueSize)||this.copyValueGeneric,this.mask=this.buckets-1,this.SLOT=SLOT}HashTable.prototype.cache=function(key,keyOffset,value,valueOffset){if(1===this.mode)throw new Error(HashTable.ERROR_MODE);this.mode=2,0===this.valueSize&&(value=VALUE,valueOffset=0),Hash(key,keyOffset,this.keySize);var result=this.tables[(H1>>24<<8|H2>>24)&this.mask].cache(H1,H2,key,keyOffset,value,valueOffset);return 0===result&&this.length++,result},HashTable.prototype.exist=function(key,keyOffset){return Hash(key,keyOffset,this.keySize),this.tables[(H1>>24<<8|H2>>24)&this.mask].exist(H1,H2,key,keyOffset)},HashTable.prototype.get=function(key,keyOffset,value,valueOffset){return 0===this.valueSize&&(value=VALUE,valueOffset=0),Hash(key,keyOffset,this.keySize),this.tables[(H1>>24<<8|H2>>24)&this.mask].get(H1,H2,key,keyOffset,value,valueOffset)},Object.defineProperty(HashTable.prototype,"load",{get:function(){return this.length/this.capacity}}),HashTable.prototype.set=function(key,keyOffset,value,valueOffset){if(2===this.mode)throw new Error(HashTable.ERROR_MODE);this.mode=1,0===this.valueSize&&(value=VALUE,valueOffset=0),Hash(key,keyOffset,this.keySize);var h1=H1,h2=H2,table=this.tables[(h1>>24<<8|h2>>24)&this.mask];if(1===(result=table.set(h1,h2,key,keyOffset,value,valueOffset)))return 1;if(0===result)return this.length++,0;for(var resize=1;resize<=2;resize++){var buckets=table.buckets;if(table.resize(buckets<<resize)){var result;if(this.capacity-=8*buckets,this.capacity+=8*table.buckets,1===(result=table.set(h1,h2,key,keyOffset,value,valueOffset)))return 1;if(0===result)return this.length++,0}}throw new Error(HashTable.ERROR_SET)},Object.defineProperty(HashTable.prototype,"size",{get:function(){var size=this.capacity/8*this.bucket;return Assert.GE("size",size,0),size}}),HashTable.prototype.unset=function(key,keyOffset){Hash(key,keyOffset,this.keySize);var result=this.tables[(H1>>24<<8|H2>>24)&this.mask].unset(H1,H2,key,keyOffset);return 1===result&&this.length--,result},HashTable.KEY_MIN=4,HashTable.KEY_MAX=32,HashTable.VALUE_MIN=0,HashTable.VALUE_MAX=1048576,HashTable.BUFFERS_MIN=1,HashTable.BUFFERS_MAX=8192,HashTable.ELEMENTS_MIN=0,HashTable.ELEMENTS_MAX=4294967296,HashTable.BUCKETS_MIN=2,HashTable.BUCKETS_MAX=65536,HashTable.BUFFER_MAX=2145386496,Assert.GE("BUFFER_MAX",HashTable.BUFFER_MAX,0),Assert.LE("BUFFER_MAX",HashTable.BUFFER_MAX,Math.pow(2,32)),Assert.LE("ELEMENTS_MAX",HashTable.ELEMENTS_MAX,HashTable.BUFFERS_MAX*HashTable.BUCKETS_MAX*8),Assert.GE("SLOT.length",SLOT.length,256),Assert.LE("SLOT.length",SLOT.length,256),Assert.GE("TABLE.length",TABLE.length,256*HashTable.KEY_MAX*2),Assert.LE("TABLE.length",TABLE.length,256*HashTable.KEY_MAX*2),HashTable.ERROR_MAXIMUM_CAPACITY_EXCEEDED="maximum capacity exceeded",HashTable.ERROR_MODE="cache() and set() methods are mutually exclusive",HashTable.ERROR_SET="set() failed despite multiple resize attempts",HashTable.bucket=function(keySize,valueSize){if(Assert.GE("keySize",keySize,HashTable.KEY_MIN),Assert.LE("keySize",keySize,HashTable.KEY_MAX),keySize%4)throw new Error("keySize must be a multiple of 4");Assert.GE("valueSize",valueSize,HashTable.VALUE_MIN),Assert.LE("valueSize",valueSize,HashTable.VALUE_MAX);var bucket=64*Math.ceil((20+8*(keySize+valueSize))/64);return Assert.GE("bucket",bucket,0),bucket},HashTable.buckets=function(elements,buffers){Assert.GE("elements",elements,HashTable.ELEMENTS_MIN),Assert.LE("elements",elements,HashTable.ELEMENTS_MAX),Assert.GE("buffers",buffers,HashTable.BUFFERS_MIN),Assert.LE("buffers",buffers,HashTable.BUFFERS_MAX),Assert.P2("buffers",buffers);var power=Math.ceil(Math.log2(Math.max(1,elements/8/buffers))),buckets=Math.max(HashTable.BUCKETS_MIN,Math.pow(2,power));return Assert.GE("buckets",buckets,HashTable.BUCKETS_MIN),Assert.P2("buckets",buckets),buckets},HashTable.buffers=function(keySize,valueSize,elements){if(Assert.LE("HashTable.KEY_MAX",HashTable.KEY_MAX,64),Assert.LE("HashTable.VALUE_MAX",HashTable.VALUE_MAX,1048576),Assert.GE("HashTable.BUFFER_MAX",HashTable.BUFFER_MAX,1073741823),Assert.GE("keySize",keySize,HashTable.KEY_MIN),Assert.LE("keySize",keySize,HashTable.KEY_MAX),keySize%4)throw new Error("keySize must be a multiple of 4");Assert.GE("valueSize",valueSize,HashTable.VALUE_MIN),Assert.LE("valueSize",valueSize,HashTable.VALUE_MAX),Assert.GE("elements",elements,HashTable.ELEMENTS_MIN),Assert.LE("elements",elements,HashTable.ELEMENTS_MAX);var bucket=HashTable.bucket(keySize,valueSize),buffers=HashTable.BUFFERS_MIN;Assert.GE("buffers",buffers,1);for(var limit=1e4;limit--;){var buckets=HashTable.buckets(elements,buffers),buffer=buckets*bucket;if(buffers===HashTable.BUFFERS_MAX||buckets<=HashTable.BUCKETS_MAX&&buffer<=HashTable.BUFFER_MAX)break;buffers*=2}return Assert.GE("buffers",buffers,HashTable.BUFFERS_MIN),Assert.LE("buffers",buffers,HashTable.BUFFERS_MAX),Assert.P2("buffers",buffers),buffers},HashTable.capacity=function(elements){Assert.GE("elements",elements,HashTable.ELEMENTS_MIN),Assert.LE("elements",elements,HashTable.ELEMENTS_MAX);var capacity=Math.min(Math.floor(1.3*elements),HashTable.ELEMENTS_MAX);return Assert.GE("capacity",capacity,elements),capacity},Table.prototype.assign=function(bucket,tag,slot,key,keyOffset,value,valueOffset){this.buffer[bucket+9]|=1<<slot,this.buffer[bucket+9+1+slot]=tag,this.copyKey(key,keyOffset,this.buffer,this.keyOffset(bucket,slot)),this.copyValue(value,valueOffset,this.buffer,this.valueOffset(bucket,slot))},Table.prototype.cache=function(h1,h2,key,keyOffset,value,valueOffset){var tag=h1>>16&255,b1=(h1&this.mask)*this.bucket,f1=tag>>4&7,f2=1<<(7&tag);if(this.buffer[b1+f1]&f2){var s1=this.scan(b1,tag,key,keyOffset);if(s1<8)return this.buffer[b1+18]|=1<<s1,this.copyValue(value,valueOffset,this.buffer,this.valueOffset(b1,s1)),1}var s3=this.evict(b1),eviction=this.buffer[b1+9]&1<<s3;return eviction&&(this.buffer[b1+9]&=~(1<<s3),this.filterReset(b1,7&this.buffer[b1+9+1+s3])),this.assign(b1,tag,s3,key,keyOffset,value,valueOffset),this.buffer[b1+f1]|=f2,this.buffer[b1+18]|=1<<s3,eviction?2:0},Table.prototype.copy=function(size){switch(size){case 0:return this.copy00;case 4:return this.copy04;case 8:return this.copy08;case 16:return this.copy16;case 20:return this.copy20;case 32:return this.copy32;case 48:return this.copy48;case 64:return this.copy64;case 128:return this.copy128;case 256:return this.copy256}},Table.prototype.copyKeyGeneric=function(s,sO,t,tO){for(var size=this.keySize,groups=size>>>2;groups--;)t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],tO+=4,sO+=4,size-=4;for(;size--;)t[tO++]=s[sO++]},Table.prototype.copyValueGeneric=function(s,sO,t,tO){var size=this.valueSize;if(size<128){for(var groups=size>>>3;groups--;)t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],t[tO+4]=s[sO+4],t[tO+5]=s[sO+5],t[tO+6]=s[sO+6],t[tO+7]=s[sO+7],tO+=8,sO+=8,size-=8;for(;size--;)t[tO++]=s[sO++]}else s.copy(t,tO,sO,sO+size)},Table.prototype.copy00=function(s,sO,t,tO){},Table.prototype.copy04=function(s,sO,t,tO){t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3]},Table.prototype.copy08=function(s,sO,t,tO){t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],t[tO+4]=s[sO+4],t[tO+5]=s[sO+5],t[tO+6]=s[sO+6],t[tO+7]=s[sO+7]},Table.prototype.copy16=function(s,sO,t,tO){t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],t[tO+4]=s[sO+4],t[tO+5]=s[sO+5],t[tO+6]=s[sO+6],t[tO+7]=s[sO+7],t[tO+8]=s[sO+8],t[tO+9]=s[sO+9],t[tO+10]=s[sO+10],t[tO+11]=s[sO+11],t[tO+12]=s[sO+12],t[tO+13]=s[sO+13],t[tO+14]=s[sO+14],t[tO+15]=s[sO+15]},Table.prototype.copy20=function(s,sO,t,tO){t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],t[tO+4]=s[sO+4],t[tO+5]=s[sO+5],t[tO+6]=s[sO+6],t[tO+7]=s[sO+7],t[tO+8]=s[sO+8],t[tO+9]=s[sO+9],t[tO+10]=s[sO+10],t[tO+11]=s[sO+11],t[tO+12]=s[sO+12],t[tO+13]=s[sO+13],t[tO+14]=s[sO+14],t[tO+15]=s[sO+15],t[tO+16]=s[sO+16],t[tO+17]=s[sO+17],t[tO+18]=s[sO+18],t[tO+19]=s[sO+19]},Table.prototype.copy32=function(s,sO,t,tO){t[tO+0]=s[sO+0],t[tO+1]=s[sO+1],t[tO+2]=s[sO+2],t[tO+3]=s[sO+3],t[tO+4]=s[sO+4],t[tO+5]=s[sO+5],t[tO+6]=s[sO+6],t[tO+7]=s[sO+7],t[tO+8]=s[sO+8],t[tO+9]=s[sO+9],t[tO+10]=s[sO+10],t[tO+11]=s[sO+11],t[tO+12]=s[sO+12],t[tO+13]=s[sO+13],t[tO+14]=s[sO+14],t[tO+15]=s[sO+15],t[tO+16]=s[sO+16],t[tO+17]=s[sO+17],t[tO+18]=s[sO+18],t[tO+19]=s[sO+19],t[tO+20]=s[sO+20],t[tO+21]=s[sO+21],t[tO+22]=s[sO+22],t[tO+23]=s[sO+23],t[tO+24]=s[sO+24],t[tO+25]=s[sO+25],t[tO+26]=s[sO+26],t[tO+27]=s[sO+27],t[tO+28]=s[sO+28],t[tO+29]=s[sO+29],t[tO+30]=s[sO+30],t[tO+31]=s[sO+31]},Table.prototype.copy48=function(s,sO,t,tO){this.copy32(s,sO+0,t,tO+0),this.copy16(s,sO+32,t,tO+32)},Table.prototype.copy64=function(s,sO,t,tO){this.copy32(s,sO+0,t,tO+0),this.copy32(s,sO+32,t,tO+32)},Table.prototype.copy128=function(s,sO,t,tO){this.copy32(s,sO+0,t,tO+0),this.copy32(s,sO+32,t,tO+32),this.copy32(s,sO+64,t,tO+64),this.copy32(s,sO+96,t,tO+96)},Table.prototype.copy256=function(s,sO,t,tO){this.copy32(s,sO+0,t,tO+0),this.copy32(s,sO+32,t,tO+32),this.copy32(s,sO+64,t,tO+64),this.copy32(s,sO+96,t,tO+96),this.copy32(s,sO+128,t,tO+128),this.copy32(s,sO+160,t,tO+160),this.copy32(s,sO+192,t,tO+192),this.copy32(s,sO+224,t,tO+224)},Table.prototype.equal=function(a,aOffset,b,bOffset,size){for(;size--;)if(a[aOffset++]!=b[bOffset++])return 0;return 1},Table.prototype.evict=function(bucket){for(var tick=9;tick--;){var slot=this.buffer[bucket+18+1];if(this.buffer[bucket+18+1]=this.buffer[bucket+18+1]+1&7,0==(this.buffer[bucket+18]&1<<slot))break;this.buffer[bucket+18]&=~(1<<slot)}return slot},Table.prototype.exist=function(h1,h2,key,keyOffset){var tag=h1>>16&255,b1=(h1&this.mask)*this.bucket,b2=(h2&this.mask)*this.bucket,f1=tag>>4&7,f2=1<<(7&tag);if(this.buffer[b1+f1]&f2){if(this.scan(b1,tag,key,keyOffset)<8)return 1;if(this.scan(b2,tag,key,keyOffset)<8)return 1}return 0},Table.prototype.filterDecrementSecondPosition=function(bucket){if(0===this.buffer[bucket+8])throw new Error("count should not be 0");if(this.buffer[bucket+8]<255&&(this.buffer[bucket+8]--,0===this.buffer[bucket+8]))for(var filter=0;filter<8;filter++)this.filterReset(bucket,filter)},Table.prototype.filterIncrementSecondPosition=function(bucket){this.buffer[bucket+8]<255&&this.buffer[bucket+8]++},Table.prototype.filterReset=function(bucket,filter){if(0===this.buffer[bucket+8]&&0!==this.buffer[bucket+filter]){this.buffer[bucket+filter]=0;for(var slot=0;slot<8;slot++)if(this.buffer[bucket+9]&1<<slot){var tag=this.buffer[bucket+9+1+slot];if((tag>>4&7)===filter){var f2=1<<(7&tag);this.buffer[bucket+filter]|=f2}}}},Table.prototype.get=function(h1,h2,key,keyOffset,value,valueOffset){var tag=h1>>16&255,b1=(h1&this.mask)*this.bucket,b2=(h2&this.mask)*this.bucket,f1=tag>>4&7,f2=1<<(7&tag);if(this.buffer[b1+f1]&f2){var s1=this.scan(b1,tag,key,keyOffset);if(s1<8)return this.buffer[b1+18]|=1<<s1,this.copyValue(this.buffer,this.valueOffset(b1,s1),value,valueOffset),1;var s2=this.scan(b2,tag,key,keyOffset);if(s2<8)return this.buffer[b2+18]|=1<<s2,this.copyValue(this.buffer,this.valueOffset(b2,s2),value,valueOffset),1}return 0},Table.prototype.keyOffset=function(bucket,slot){return bucket+20+(this.keySize+this.valueSize)*slot},Table.prototype.resize=function(resizeBuckets){if(Assert.GE("resizeBuckets",resizeBuckets,2*this.buckets),Assert.P2("resizeBuckets",resizeBuckets),resizeBuckets>HashTable.BUCKETS_MAX||this.bucket*resizeBuckets>HashTable.BUFFER_MAX)throw new Error(HashTable.ERROR_MAXIMUM_CAPACITY_EXCEEDED);var buckets=this.buckets,buffer=this.buffer;this.buckets=resizeBuckets,this.buffer=new Uint8Array(this.bucket*resizeBuckets),this.mask=resizeBuckets-1;for(var index=0;index<buckets;index++)for(var bucket=index*this.bucket,slot=0;slot<8;slot++)if(buffer[bucket+9]&1<<slot){var keyOffset=this.keyOffset(bucket,slot),valueOffset=this.valueOffset(bucket,slot);if(Hash(buffer,keyOffset,this.keySize),-1===this.set(H1,H2,buffer,keyOffset,buffer,valueOffset))return this.buckets=buckets,this.buffer=buffer,this.mask=buckets-1,0}return 1},Table.prototype.scan=function(bucket,tag,key,keyOffset){for(var slot=0;slot<8&&!(this.buffer[bucket+9+1+slot]===tag&&this.buffer[bucket+9]&1<<slot&&this.equal(this.buffer,this.keyOffset(bucket,slot),key,keyOffset,this.keySize));slot++);return slot},Table.prototype.set=function(h1,h2,key,keyOffset,value,valueOffset){var tag=h1>>16&255,b1=(h1&this.mask)*this.bucket,b2=(h2&this.mask)*this.bucket,f1=tag>>4&7,f2=1<<(7&tag);if(this.buffer[b1+f1]&f2){var s1=this.scan(b1,tag,key,keyOffset);if(s1<8)return this.copyValue(value,valueOffset,this.buffer,this.valueOffset(b1,s1)),1;var s2=this.scan(b2,tag,key,keyOffset);if(s2<8)return this.copyValue(value,valueOffset,this.buffer,this.valueOffset(b2,s2)),1}var s3=this.SLOT[this.buffer[b1+9]];if(s3<8)return this.assign(b1,tag,s3,key,keyOffset,value,valueOffset),this.buffer[b1+f1]|=f2,0;var s4=this.SLOT[this.buffer[b2+9]];if(s4<8)return this.assign(b2,tag,s4,key,keyOffset,value,valueOffset),this.buffer[b1+f1]|=f2,this.filterIncrementSecondPosition(b1),0;var s5=this.vacate(b1);if(s5<8)return this.assign(b1,tag,s5,key,keyOffset,value,valueOffset),this.buffer[b1+f1]|=f2,0;var s6=this.vacate(b2);return s6<8?(this.assign(b2,tag,s6,key,keyOffset,value,valueOffset),this.buffer[b1+f1]|=f2,this.filterIncrementSecondPosition(b1),0):-1},Table.prototype.unset=function(h1,h2,key,keyOffset){var tag=h1>>16&255,b1=(h1&this.mask)*this.bucket,b2=(h2&this.mask)*this.bucket,f1=tag>>4&7,f2=1<<(7&tag);if(this.buffer[b1+f1]&f2){var s1=this.scan(b1,tag,key,keyOffset);if(s1<8)return this.buffer[b1+9]&=~(1<<s1),this.buffer[b1+9+1+s1]=0,this.zero(this.keyOffset(b1,s1),this.keySize),this.zero(this.valueOffset(b1,s1),this.valueSize),this.filterReset(b1,f1),1;var s2=this.scan(b2,tag,key,keyOffset);if(s2<8)return this.buffer[b2+9]&=~(1<<s2),this.buffer[b2+9+1+s2]=0,this.zero(this.keyOffset(b2,s2),this.keySize),this.zero(this.valueOffset(b2,s2),this.valueSize),this.filterDecrementSecondPosition(b1),1}return 0},Table.prototype.vacate=function(bucket){for(var slot=0;slot<8;slot++){var keyOffset=this.keyOffset(bucket,slot),valueOffset=this.valueOffset(bucket,slot);Hash(this.buffer,keyOffset,this.keySize);var tag=H1>>16&255,b1=(H1&this.mask)*this.bucket,b2=(H2&this.mask)*this.bucket;if(bucket===b1){var s2=this.SLOT[this.buffer[b2+9]];if(s2<8){this.assign(b2,tag,s2,this.buffer,keyOffset,this.buffer,valueOffset),this.filterIncrementSecondPosition(b1);break}}else{if(bucket!==b2)throw new Error("bucket !== b1 && bucket !== b2");var s1=this.SLOT[this.buffer[b1+9]];if(s1<8){this.assign(b1,tag,s1,this.buffer,keyOffset,this.buffer,valueOffset),this.filterDecrementSecondPosition(b1);break}}}return slot},Table.prototype.valueOffset=function(bucket,slot){return bucket+20+(this.keySize+this.valueSize)*slot+this.keySize},Table.prototype.zero=function(offset,size){if(size<64){for(var groups=size>>>2;groups--;)this.buffer[offset+0]=0,this.buffer[offset+1]=0,this.buffer[offset+2]=0,this.buffer[offset+3]=0,offset+=4,size-=4;for(;size--;)this.buffer[offset++]=0}else this.buffer.fill(0,offset,offset+size)},window.HashTable=HashTable}(),function(i,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((i||self).preactSignalsCore={})}(this,(function(i){function t(){throw new Error("Cycle detected")}var n=Symbol.for("preact-signals");function o(){if(s>1)s--;else{for(var i,t=!1;void 0!==h;){var n=h;for(h=void 0,e++;void 0!==n;){var o=n.o;if(n.o=void 0,n.f&=-3,!(8&n.f)&&c(n))try{n.c()}catch(n){t||(i=n,t=!0)}n=o}}if(e=0,s--,t)throw i}}var r=void 0,f=0,h=void 0,s=0,e=0,v=0;function u(i){if(void 0!==r){var t=i.n;if(void 0===t||t.t!==r)return t={i:0,S:i,p:r.s,n:void 0,t:r,e:void 0,x:void 0,r:t},void 0!==r.s&&(r.s.n=t),r.s=t,i.n=t,32&r.f&&i.S(t),t;if(-1===t.i)return t.i=0,void 0!==t.n&&(t.n.p=t.p,void 0!==t.p&&(t.p.n=t.n),t.p=r.s,t.n=void 0,r.s.n=t,r.s=t),t}}function d(i){this.v=i,this.i=0,this.n=void 0,this.t=void 0}function c(i){for(var t=i.s;void 0!==t;t=t.n)if(t.S.i!==t.i||!t.S.h()||t.S.i!==t.i)return!0;return!1}function a(i){for(var t=i.s;void 0!==t;t=t.n){var n=t.S.n;if(void 0!==n&&(t.r=n),t.S.n=t,t.i=-1,void 0===t.n){i.s=t;break}}}function l(i){for(var t=i.s,n=void 0;void 0!==t;){var o=t.p;-1===t.i?(t.S.U(t),void 0!==o&&(o.n=t.n),void 0!==t.n&&(t.n.p=o)):n=t,t.S.n=t.r,void 0!==t.r&&(t.r=void 0),t=o}i.s=n}function y(i){d.call(this,void 0),this.x=i,this.s=void 0,this.g=v-1,this.f=4}function w(i){var t=i.u;if(i.u=void 0,"function"==typeof t){s++;var n=r;r=void 0;try{t()}catch(t){throw i.f&=-2,i.f|=8,p(i),t}finally{r=n,o()}}}function p(i){for(var t=i.s;void 0!==t;t=t.n)t.S.U(t);i.x=void 0,i.s=void 0,w(i)}function b(i){if(r!==this)throw new Error("Out-of-order effect");l(this),r=i,this.f&=-2,8&this.f&&p(this),o()}function g(i){this.x=i,this.u=void 0,this.s=void 0,this.o=void 0,this.f=32}function _(i){var t=new g(i);try{t.c()}catch(i){throw t.d(),i}return t.d.bind(t)}d.prototype.brand=n,d.prototype.h=function(){return!0},d.prototype.S=function(i){this.t!==i&&void 0===i.e&&(i.x=this.t,void 0!==this.t&&(this.t.e=i),this.t=i)},d.prototype.U=function(i){if(void 0!==this.t){var t=i.e,n=i.x;void 0!==t&&(t.x=n,i.e=void 0),void 0!==n&&(n.e=t,i.x=void 0),i===this.t&&(this.t=n)}},d.prototype.subscribe=function(i){var t=this;return _((function(){var n=t.value,o=32&this.f;this.f&=-33;try{i(n)}finally{this.f|=o}}))},d.prototype.valueOf=function(){return this.value},d.prototype.toString=function(){return this.value+""},d.prototype.toJSON=function(){return this.value},d.prototype.peek=function(){return this.v},Object.defineProperty(d.prototype,"value",{get:function(){var i=u(this);return void 0!==i&&(i.i=this.i),this.v},set:function(i){if(r instanceof y&&function(){throw new Error("Computed cannot have side-effects")}(),i!==this.v){e>100&&t(),this.v=i,this.i++,v++,s++;try{for(var n=this.t;void 0!==n;n=n.x)n.t.N()}finally{o()}}}}),(y.prototype=new d).h=function(){if(this.f&=-3,1&this.f)return!1;if(32==(36&this.f))return!0;if(this.f&=-5,this.g===v)return!0;if(this.g=v,this.f|=1,this.i>0&&!c(this))return this.f&=-2,!0;var i=r;try{a(this),r=this;var t=this.x();(16&this.f||this.v!==t||0===this.i)&&(this.v=t,this.f&=-17,this.i++)}catch(i){this.v=i,this.f|=16,this.i++}return r=i,l(this),this.f&=-2,!0},y.prototype.S=function(i){if(void 0===this.t){this.f|=36;for(var t=this.s;void 0!==t;t=t.n)t.S.S(t)}d.prototype.S.call(this,i)},y.prototype.U=function(i){if(void 0!==this.t&&(d.prototype.U.call(this,i),void 0===this.t)){this.f&=-33;for(var t=this.s;void 0!==t;t=t.n)t.S.U(t)}},y.prototype.N=function(){if(!(2&this.f)){this.f|=6;for(var i=this.t;void 0!==i;i=i.x)i.t.N()}},y.prototype.peek=function(){if(this.h()||t(),16&this.f)throw this.v;return this.v},Object.defineProperty(y.prototype,"value",{get:function(){1&this.f&&t();var i=u(this);if(this.h(),void 0!==i&&(i.i=this.i),16&this.f)throw this.v;return this.v}}),g.prototype.c=function(){var i=this.S();try{if(8&this.f)return;if(void 0===this.x)return;var t=this.x();"function"==typeof t&&(this.u=t)}finally{i()}},g.prototype.S=function(){1&this.f&&t(),this.f|=1,this.f&=-9,w(this),a(this),s++;var i=r;return r=this,b.bind(this,i)},g.prototype.N=function(){2&this.f||(this.f|=2,this.o=h,h=this)},g.prototype.d=function(){this.f|=8,1&this.f||p(this)},i.Signal=d,i.batch=function(i){if(s>0)return i();s++;try{return i()}finally{o()}},i.computed=function(i){return new y(i)},i.effect=_,i.signal=function(i){return new d(i)},i.untracked=function(i){if(f>0)return i();var t=r;r=void 0,f++;try{return i()}finally{f--,r=t}}})),fluid.registerNamespace("fluid.colour"),fluid.colour.hexIndirect={3:"001122",4:"00112233",6:"012345",8:"01234567"},fluid.colour.hexToArray=function(hex){"#"!==hex.charAt(0)&&fluid.fail("hex colour must begin with # - "+hex),hex=hex.substring(1);const digits=fluid.transform(hex.split(""),(function(ch){return parseInt(ch,16)})),indirect=fluid.colour.hexIndirect[hex.length];indirect||fluid.fail("Unsupported number of hex digits in "+hex+": can only supply "+Object.keys(fluid.colour.hexIndirect).join(", ")+" digits");const array=[];for(let i=0;i<indirect.length;i+=2){const colour=(16*digits[indirect[i]]+digits[indirect[i+1]])/(6===i?255:1);array.push(colour)}return array},fluid.colour.arrayToString=function(array){return(3===array.length?"rgb(":"rgba(")+array.join(", ")+")"},fluid.colour.interpolate=function(f,c1,c2){return fluid.transform([(1-f)*c1[0]+f*c2[0],(1-f)*c1[1]+f*c2[1],(1-f)*c1[2]+f*c2[2]],Math.round)},fluid.colour.interpolateStops=function(stops,value){const binIndex=stops.findIndex((stop=>value<=stop[0])),bin=stops[binIndex];if(-1===binIndex)return stops[stops.length-1][1];if(0===binIndex)return bin[1];const lowerStop=stops[binIndex-1],upperStop=bin,t=(value-lowerStop[0])/(upperStop[0]-lowerStop[0]),interpolatedColor=fluid.colour.interpolate(t,fluid.colour.hexToArray(lowerStop[1]),fluid.colour.hexToArray(upperStop[1]));return fluid.colour.arrayToString(interpolatedColor)},fluid.colour.memoStops=function(stops,steps){const colours=[];for(let i=0;i<=steps;++i)colours.push(fluid.colour.interpolateStops(stops,i/steps));return colours},fluid.colour.lookupStop=function(steps,prop){return steps[Math.floor(prop*(steps.length-1))]},fluid.colour.average=function(ca){return ca.reduce((function(total,c){return total[0]+=c[0],total[1]+=c[1],total[2]+=c[2],total}),[0,0,0]).map((function(e){return e/ca.length}))},fluid.colour.rgbToHsl=function(c){const r=c[0]/255,g=c[1]/255,b=c[2]/255,max=Math.max(r,g,b),min=Math.min(r,g,b);let h,s,l=(max+min)/2;if(max===min)h=s=0;else{const d=max-min;s=l>.5?d/(2-max-min):d/(max+min),h=max===r?(g-b)/d+(g<b?6:0):max===g?(b-r)/d+2:(r-g)/d+4,h/=6}return[h,s,l]},fluid.colour.hue2rgb=function(p,q,t){return t<0?t+=1:t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p},fluid.colour.hslToRgb=function(hsl){const h=hsl[0],s=hsl[1],l=hsl[2];let r,g,b;if(0===s)r=g=b=l;else{const q=l<.5?l*(1+s):l+s-l*s,p=2*l-q;r=fluid.colour.hue2rgb(p,q,h+1/3),g=fluid.colour.hue2rgb(p,q,h),b=fluid.colour.hue2rgb(p,q,h-1/3)}return[Math.round(255*r),Math.round(255*g),Math.round(255*b)]},(hortis=fluid.registerNamespace("hortis")).encodeHTML=function(str){return str.replace(/[&<>'"]/g,(function(tag){return{"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[tag]}))},hortis.renderSVGElement=function(markup,parentContainer){const element=$.parseXML(markup).documentElement;return parentContainer.append(element),element},hortis.renderNumber=function(number){return Math.abs(number)<1e-5?"0":number.toFixed(3)},hortis.emitPath=function(elements){let togo="";return elements.forEach((function(elem){togo+="string"==typeof elem?elem:hortis.renderNumber(elem)})),togo},hortis.circularPath=function(radius){const r=radius;return hortis.emitPath(["M",-r," ",0,"A",r," ",r," 0 1 0 ",r," ",0,"A",r," ",r," 0 1 0 ",-r," ",0])},hortis.annularPath=function(innerRadius,outerRadius){const ir=innerRadius,or=outerRadius;return hortis.emitPath(["M",-or," ",0,"A",or," ",or," 0 1 0 ",or," ",0,"A",or," ",or," 0 1 0 ",-or," ",0,"Z","M",-ir," ",0,"A",ir," ",ir," 0 1 1 ",ir," ",0,"A",ir," ",ir," 0 1 1 ",-ir," ",0,"Z"])},hortis.segmentPath=function(startAngle,endAngle,innerRadius,outerRadius){const cs=Math.cos(startAngle),ss=-Math.sin(startAngle),ce=Math.cos(endAngle),se=-Math.sin(endAngle),i=innerRadius,o=outerRadius,lfa=(+(endAngle-startAngle>=Math.PI)).toString();return hortis.emitPath(["M",cs*i," ",ss*i,"A",i," ",i," 0 ",lfa," 0 ",ce*i," ",se*i,"L",ce*o," ",se*o,"A",o," ",o," 0 ",lfa," 1 ",cs*o," ",ss*o,"Z"])},hortis.linearTextPath=function(leftAngle,rightAngle,innerRadius,outerRadius){const midAngle=(leftAngle+rightAngle)/2,c=Math.cos(midAngle),s=-Math.sin(midAngle),sr=c>0?innerRadius:outerRadius,fr=c>0?outerRadius:innerRadius;return hortis.emitPath(["M",c*sr," ",s*sr,"L",c*fr," ",s*fr])},hortis.segmentTextPath=function(startAngle,endAngle,outerRadius){const cs=Math.cos(startAngle),ss=-Math.sin(startAngle),ce=Math.cos(endAngle),se=-Math.sin(endAngle),ar=outerRadius-20,lfa=(+(endAngle-startAngle>=Math.PI)).toString();return hortis.emitPath(["M",cs*ar," ",ss*ar,"A",ar," ",ar," 0 ",lfa," 0 ",ce*ar," ",se*ar])},hortis.circularTextPath=function(outerRadius){const ar=outerRadius-20;return hortis.emitPath(["M","-0.1 ",-ar,"A",ar," ",ar," 0 1 0 ","0.1 ",-ar])};var hortis=fluid.registerNamespace("hortis"),{effect:effect,computed:computed,batch:batch}=preactSignalsCore;fluid.defaults("hortis.csvReader",{gradeNames:"fluid.component",members:{completionPromise:"@expand:fluid.promise()"},csvOptions:{header:!0,skipEmptyLines:!0},events:{},listeners:{"onCreate.parse":"hortis.csvReader.parse({that}, {that}.options.csvOptions, {that}.options.url)"}}),hortis.csvReader.parse=function(that,csvOptions,url){const options={...csvOptions,complete:function(results){that.parsed=results,that.data=results.data,that.headers=results.meta.fields,that.completionPromise.resolve(that.data)},error:function(err){that.completionPromise.reject(),fluid.fail("Error parsing CSV file ",url,": ",err)}};Papa.parse(url,options)},fluid.defaults("hortis.urlCsvReader",{gradeNames:"hortis.csvReader",csvOptions:{download:!0}}),fluid.coerceToPrimitive=function(string){return/^(true|false|null)$/.test(string)||/^[\[{0-9]/.test(string)&&!/^{\w/.test(string)?JSON.parse(string):string},fluid.computed=function(func,...args){return computed((()=>{const designalArgs=args.map((arg=>arg instanceof preactSignalsCore.Signal?arg.value:arg));return"string"==typeof func?fluid.invokeGlobalFunction(func,designalArgs):func.apply(null,designalArgs)}))},fluid.effect=function(func,...args){return effect((()=>{let undefinedSignals=!1;const designalArgs=[];for(const arg of args)if(arg instanceof preactSignalsCore.Signal){const value=arg.value;designalArgs.push(arg.value),void 0===value&&(undefinedSignals=!0)}else designalArgs.push(arg);if(!undefinedSignals)return"string"==typeof func?fluid.invokeGlobalFunction(func,designalArgs):func.apply(null,designalArgs)}))},fluid.defaults("hortis.vizLoader",{gradeNames:["fluid.component"],components:{taxaLoader:{type:"hortis.urlCsvReader",options:{url:"{vizLoader}.options.taxaFile"}},obsLoader:{type:"hortis.urlCsvReader",options:{url:"{vizLoader}.options.obsFile"}},taxa:{type:"hortis.taxa",options:{members:{rows:"{vizLoader}.taxaRows"}}}},members:{resourcesLoaded:"@expand:signal()",taxaRows:"@expand:signal([])",obsRows:"@expand:signal([])",filteredObs:"@expand:fluid.computed({that}.filterObs, {that}.obsRows)",finalFilteredObs:"@expand:fluid.computed({that}.filterObsByTaxa, {that}.filteredObs)"},invokers:{filterObs:fluid.identity,filterObsByTaxa:fluid.identity},listeners:{"onCreate.bindResources":"hortis.vizLoader.bindResources"}}),hortis.vizLoader.bindResources=async function(that){const promises=[that.taxaLoader.completionPromise,that.obsLoader.completionPromise],[taxa,obs]=await Promise.all(promises);batch((()=>{that.taxaRows.value=taxa,that.obsRows.value=obs,that.resourcesLoaded.value=!0}))},hortis.taxonTooltipTemplate='<div class="imerss-tooltip">\n    <div class="imerss-photo" style="background-image: url(%imgUrl)"></div>\n    <div class="text"><b>%taxonRank:</b> %taxonNames</div>\n</div>',hortis.capitalize=function(string){return string.charAt(0).toUpperCase()+string.slice(1)},hortis.renderTaxonTooltip=function(that,hoverId){const row=that.rowById.value[hoverId],terms={imgUrl:row.iNaturalistTaxonImage||""};row.rank?terms.taxonRank=hortis.capitalize(row.rank):terms.taxonRank="Species";const names=[row.taxonName||row.iNaturalistTaxonName,row.commonName,row.hulqName].filter((name=>name));return terms.taxonNames=names.join(" / "),fluid.stringTemplate(hortis.taxonTooltipTemplate,terms)},hortis.isInDocument=function(node){const dokkument=fluid.getDocument(node),container=node[0];return $.contains(dokkument,container)||dokkument===container},hortis.clearAllTooltips=function(that){hortis.clearTooltip(that),$(".ui-tooltip").remove(),that[that.options.tooltipKey].value=null},hortis.clearTooltip=function(that){const tooltipTarget=that.tooltipTarget;tooltipTarget&&(that.tooltipTarget=null,hortis.isInDocument(tooltipTarget)?tooltipTarget.tooltip("destroy"):hortis.clearAllTooltips(that))},hortis.updateTooltip=function(that,id){const content=id?that.renderTooltip(id):null;if(hortis.clearTooltip(that),content){const target=$(that.hoverEvent.target);target.tooltip({items:target}),target.tooltip("option","content",content||""),target.tooltip("option","track",!0),target.tooltip("open",that.hoverEvent),that.tooltipTarget=target}else that.hoverEvent=null},hortis.subscribeHover=function(that){const tooltipKey=that.options.tooltipKey;return effect((()=>{hortis.updateTooltip(that,that[tooltipKey].value)}))},fluid.defaults("fluid.stringTemplateRenderingView",{gradeNames:"fluid.containerRenderingView",invokers:{renderMarkup:"fluid.renderStringTemplate({that}.options.markup.container, {that}.signalsToModel)",signalsToModel:"fluid.notImplemented"},members:{renderSubscribe:"@expand:fluid.renderSubscribe({that}, {that}.signalsToModel)"},signals:{}}),fluid.renderStringTemplate=function(template,modelFetcher){return fluid.stringTemplate(template,modelFetcher())},fluid.renderToDocument=function(that){const markup=that.renderMarkup();that.container[0].innerHTML=markup},fluid.renderSubscribe=function(that,signalsToModel){effect((()=>{const model=signalsToModel();fluid.renderToDocument(that,model)}))},fluid.defaults("hortis.recordReporter",{gradeNames:"fluid.stringTemplateRenderingView",invokers:{signalsToModel:"hortis.recordReporter.signalsToModel({that}.options.signals)",renderMarkup:"hortis.recordReporter.renderMarkup({that}.options.markup, {that}.signalsToModel)"},markup:{fallbackContainer:"<div></div>",container:"<div>Displaying %filteredRows of %allRows records</div>"}}),hortis.recordReporter.renderMarkup=function(markup,signalsToModel){const model=signalsToModel();return model.filteredRows?fluid.stringTemplate(markup.container,model):markup.fallbackContainer},hortis.recordReporter.signalsToModel=function(signals){return{filteredRows:signals.filteredObs.value.length,allRows:signals.obsRows.value.length}},fluid.derefSignal=function(signal,path){return computed((()=>{const value=signal.value;return fluid.get(value,path)}))},fluid.defaults("hortis.beaVizLoader",{selectors:{interactions:".imerss-interactions-holder",recordReporter:".record-reporter"},components:{recordReporter:{type:"hortis.recordReporter",container:"{that}.dom.recordReporter",options:{signals:{filteredObs:"{vizLoader}.finalFilteredObs",obsRows:"{vizLoader}.obsRows"}}},pollChecklist:{type:"hortis.checklist.withHolder",container:".imerss-pollinators",options:{gradeNames:"hortis.checklist.inLoader",rootId:1,filterRanks:["epifamily","family"],selectable:!0,members:{rowById:"{taxa}.rowById",rowFocus:"@expand:fluid.derefSignal({vizLoader}.taxaFromObs, pollRowFocus)",allRowFocus:"@expand:fluid.derefSignal({vizLoader}.allTaxaFromObs, pollRowFocus)"}}},plantChecklist:{type:"hortis.checklist.withHolder",container:".imerss-plants",options:{gradeNames:"hortis.checklist.inLoader",rootId:47126,filterRanks:["class","order","family","kingdom"],selectable:!0,members:{rowById:"{taxa}.rowById",rowFocus:"@expand:fluid.derefSignal({vizLoader}.taxaFromObs, plantRowFocus)",allRowFocus:"@expand:fluid.derefSignal({vizLoader}.allTaxaFromObs, plantRowFocus)"}}},interactions:{type:"hortis.interactions",options:{members:{plantSelection:"{plantChecklist}.rowSelection",pollSelection:"{pollChecklist}.rowSelection"}}},drawInteractions:{type:"hortis.drawInteractions",container:"{that}.dom.interactions",options:{components:{interactions:"{interactions}",taxa:"{taxa}"}}}},members:{finalFilteredObs:"@expand:fluid.computed(hortis.filterObsByTwoTaxa, {that}.filteredObs, \n                {plantChecklist}.rowSelection, {pollChecklist}.rowSelection)",allTaxaFromObs:"@expand:fluid.computed(hortis.twoTaxaFromObs, {that}.obsRows, {taxa}.rowById)",taxaFromObs:"@expand:fluid.computed(hortis.twoTaxaFromObs, {that}.filteredObs, {taxa}.rowById)"},invokers:{}}),hortis.closeParentTaxa=function(rowFocus,rowById){return Object.keys(rowFocus).forEach((function(id){let row=rowById[id];for(;row;)rowFocus[row.id]=!0,row=rowById[row.parentId]})),rowFocus},hortis.taxaFromObs=function(filteredObs,rowById){const taxonIds={};return filteredObs.forEach((row=>{taxonIds[row["iNaturalist taxon ID"]]=!0})),hortis.closeParentTaxa(taxonIds,rowById)},hortis.twoTaxaFromObs=function(filteredObs,rowById){const plantIds={},pollIds={};return filteredObs.forEach((row=>{plantIds[row.plantINatId]=!0,pollIds[row.pollinatorINatId]=!0})),{plantRowFocus:hortis.closeParentTaxa(plantIds,rowById),pollRowFocus:hortis.closeParentTaxa(pollIds,rowById)}},hortis.filterObsByTwoTaxa=function(obsRows,plantSelection,pollSelection){const filteredObs=[];return obsRows.forEach((function(row){plantSelection[row.plantINatId]&&pollSelection[row.pollinatorINatId]?filteredObs.push(row):0})),filteredObs},hortis.bindTaxonHover=function(that,layoutHolder){const hoverable=that.options.selectors.hoverable;that.container.on("mouseenter",hoverable,(function(e){const id=this.dataset.rowId;layoutHolder.hoverEvent=e,layoutHolder.hoverId.value=id})),that.container.on("mouseleave",hoverable,(function(){layoutHolder.hoverId.value=null})),that.container.on("click",hoverable,(function(){const id=this.dataset.rowId;layoutHolder.events.taxonSelect.fire(id)}))},fluid.defaults("hortis.taxa",{gradeNames:"fluid.component",members:{rowByIdPre:"@expand:fluid.computed(hortis.indexTree, {that}.rows)",rowById:"@expand:fluid.computed(hortis.taxa.map, {that}.rows, {that}.rowByIdPre)",entries:"@expand:fluid.computed(hortis.computeEntries, {that}.rows, {that}.acceptRow)",entryById:"@expand:fluid.computed(hortis.indexEntries, {that}.entries)"},invokers:{acceptRow:"hortis.acceptRow({that}, {arguments}.0)"}}),hortis.acceptRow=function(){return!0},hortis.computeEntries=function(rows,acceptRow){const togo=[];return fluid.each(rows,(function(row){if(acceptRow(row))togo.push({row:row,children:hortis.computeEntries(row.children,acceptRow)});else{const dChildren=hortis.computeEntries(row.children,acceptRow);Array.prototype.push.apply(togo,dChildren)}})),hortis.sortChecklistLevel(togo)},hortis.indexEntries=function(entries){const index={};return entries.forEach((function(entry){index[entry.row.id]=entry})),index},hortis.indexTree=function(flatTree){const index={};return flatTree.forEach((function(row){index[row.id]=row})),index},hortis.taxa.map=function(rows,byId){rows.forEach(((row,i)=>{if(row.flatIndex=i,row.children||(row.children=[]),row.parentId){const parent=byId[row.parentId];row.parent=parent,fluid.pushArray(parent,"children",row)}}));const assignDepth=function(node,depth){node.depth=depth,node.children.forEach((child=>assignDepth(child,depth+1)))};return rows.length>0&&assignDepth(rows[0],0),byId},fluid.defaults("hortis.layoutHolder",{gradeNames:"fluid.modelComponent",tooltipKey:"hoverId",events:{taxonSelect:null},members:{taxonHistory:"@expand:signal([])",historyIndex:"@expand:signal(0)",rootId:"@expand:signal({that}.options.rootId)",rowFocus:"@expand:signal({})",rowSelection:"@expand:signal({})",selectedId:"@expand:signal()",hoverId:"@expand:signal()",subscribeHover:"@expand:hortis.subscribeHover({that})"},modelRelay:{isAtRoot:{target:"isAtRoot",args:["{that}.model.layoutId","{that}.options.rootId"],func:(x,y)=>x===y}},invokers:{renderTooltip:"hortis.renderTaxonTooltip({that}, {arguments}.0)"}}),fluid.defaults("hortis.vizLoaderWithMap",{gradeNames:["fluid.viewComponent","hortis.vizLoader"],selectors:{map:".imerss-map"},components:{map:{type:"hortis.libreMap",container:"{that}.dom.map",options:{gradeNames:"{vizLoader}.options.mapGrades"}}}}),hortis.projectBounds={Galiano:[[48.855,-123.65],[49.005,-123.25]],Valdes:[[49,-123.798],[49.144,-123.504]],Xetthecum:[[48.93713,-123.511],[48.9511,-123.498]],Pepiowelh:[[48.565,-123.1575],[48.598,-123.1266]],HoweSound:[[49.16,-124.281],[50.17,-122.05]],SalishSea:[[47.568,-124.2],[49.134,-122.059]]},hortis.initBounds=function(){return[[90,180],[-90,-180]]},hortis.updateBounds=function(bounds,lat,long){bounds[0][0]=Math.min(bounds[0][0],lat),bounds[0][1]=Math.min(bounds[0][1],long),bounds[1][0]=Math.max(bounds[1][0],lat),bounds[1][1]=Math.max(bounds[1][1],long)},hortis.expandBounds=function(bounds,factor){const he=(bounds[1][1]-bounds[0][1])*factor,ve=(bounds[1][0]-bounds[0][0])*factor;bounds[0][0]-=ve,bounds[0][1]-=he,bounds[1][0]+=ve,bounds[1][1]+=he},fluid.defaults("hortis.libreMap",{gradeNames:"fluid.viewComponent",mapOptions:{style:{version:8,layers:[],sources:{}}},members:{map:"@expand:hortis.libreMap.make({that}.container.0, {that}.options.mapOptions, {that}.mapLoaded)",mapLoaded:"@expand:signal()"}}),fluid.defaults("hortis.libreMap.withTiles",{addTiles:"@expand:fluid.effect(hortis.libreMap.addTileLayers, {that}.map, {that}.options.tileSets, {that}.mapLoaded)"}),hortis.libreMap.make=function(container,mapOptions,mapLoaded){const togo=new maplibregl.Map({container:container,...mapOptions});return togo.on("load",(function(){console.log("Map loaded"),mapLoaded.value=1})),togo},fluid.defaults("hortis.libreMap.streetmapTiles",{tileSets:{baseMap:{tiles:["https://tile.openstreetmap.org/{z}/{x}/{y}.png"],attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',tileSize:256}}}),fluid.defaults("hortis.libreMap.usEcoL3Tiles",{tileSets:{ecoL3:{tiles:["https://usda-nifa-b-team.github.io/b-team/tiles/us_eco_l3_tiles/{z}/{x}/{y}.png"],tileSize:512,maxzoom:8,paint:{"raster-opacity":.5}}}}),hortis.libreMap.addTileLayers=function(map,tileSets){Object.keys(tileSets).reverse().forEach((function(key){const tileSet=tileSets[key],paint=tileSet.paint||{};map.addSource(key,{type:"raster",...fluid.censorKeys(tileSet,["paint"])}),map.addLayer({id:key,type:"raster",source:key,paint:paint})}))},hortis.libreMap.viridisStops=[[0,"#440154"],[.2,"#414487"],[.4,"#2a788e"],[.6,"#22a884"],[.8,"#7ad151"],[1,"#fde725"]],hortis.libreMap.natureStops=[[0,"#ffffff"],[1,"#09326d"]],fluid.defaults("hortis.libreMap.withObsGrid",{fillStops:hortis.libreMap.viridisStops,fillOpacity:.7,outlineColour:"black",members:{gridBounds:"@expand:fluid.derefSignal({obsQuantiser}.grid, bounds)",updateObsGrid:"@expand:fluid.effect(hortis.libreMap.updateObsGrid, {that}, {obsQuantiser}, {obsQuantiser}.grid, {that}.mapLoaded)",fitBounds:"@expand:fluid.effect(hortis.libreMap.fitBounds, {that}, {that}.gridBounds, {that}.mapLoaded)"}}),hortis.libreMap.rectFromCorner=function(lat,long,latres,longres){return[[long,lat],[long+longres,lat],[long+longres,lat+latres],[long,lat+latres],[long,lat]]},hortis.libreMap.obsGridFeature=function(map,obsQuantiser,grid){const buckets=grid.buckets,latres=obsQuantiser.latResolution.value,longres=obsQuantiser.longResolution.value;return{type:"FeatureCollection",features:Object.entries(buckets).map((function([key,bucket]){const[lat,long]=hortis.obsQuantiser.indexToCoord(key,latres,longres);return{type:"Feature",geometry:{type:"Polygon",coordinates:[hortis.libreMap.rectFromCorner(lat,long,latres,longres)]},properties:{obsprop:bucket.count/grid.maxCount}}}))}},hortis.libreMap.updateObsGrid=function(map,obsQuantiser,grid){const geojson=hortis.libreMap.obsGridFeature(map,obsQuantiser,grid);let source=map.map.getSource("obsgrid-source");source||(source=map.map.addSource("obsgrid-source",{type:"geojson",data:geojson})),source&&source.setData(geojson);if(!map.map.getLayer("obsgrid-layer")){const layer={id:"obsgrid-layer",type:"fill",source:"obsgrid-source",paint:{"fill-color":{property:"obsprop",stops:map.options.fillStops},"fill-opacity":map.options.fillOpacity,"fill-outline-color":map.options.outlineColour}};map.map.addLayer(layer)}},hortis.libreMap.swapCoords=function(coords){return[coords[1],coords[0]]},hortis.libreMap.swapBounds=function(bounds){return bounds.map(hortis.libreMap.swapCoords)},hortis.libreMap.fitBounds=function(that,fitBounds){const swapped=hortis.libreMap.swapBounds(fitBounds);that.map.fitBounds(swapped)},fluid.defaults("hortis.interactions",{gradeNames:"fluid.modelComponent",members:{crossTable:"@expand:fluid.computed(hortis.interactions.count, {that}, {vizLoader}.obsRows)",plantTable:{},pollTable:{}}}),hortis.SHIFT=2**22,hortis.MASK=hortis.SHIFT-1,hortis.intIdsToKey=function(plantId,pollId){return+plantId*hortis.SHIFT+ +pollId},hortis.keyToIntIds=function(key){return{plantId:Math.floor(key/hortis.SHIFT),pollId:key&hortis.MASK}},hortis.addCount=function(table,key,count=1){void 0===table[key]&&(table[key]=0),table[key]+=count},hortis.max=function(hash){let max=Number.NEGATIVE_INFINITY;return fluid.each(hash,(function(val){max=Math.max(val,max)})),max},hortis.maxReducer=function(){const togo={value:Number.NEGATIVE_INFINITY,reduce:next=>{togo.value=Math.max(next,togo.value)}};return togo},hortis.minReducer=function(){const togo={value:Number.POSITIVE_INFINITY,reduce:next=>{togo.value=Math.min(next,togo.value)}};return togo},hortis.intKey=new Uint8Array(8),hortis.intValue=new Uint8Array(4),hortis.writeLong=function(target,long){for(let index=target.length-1;index>=0;--index){const byte=255&long;target[index]=byte,long=(long-byte)/256}},hortis.readLong=function(source){let value=0;for(let i=0;i<source.length;++i)value=256*value+source[i];return value},hortis.getHashCount=function(hash,key){hortis.writeLong(hortis.intKey,key);return 1===hash.get(hortis.intKey,0,hortis.intValue,0)?hortis.readLong(hortis.intValue):void 0},hortis.addHashCount=function(hash,key){const count=hortis.getHashCount(hash,key);hortis.writeLong(hortis.intValue,void 0===count?1:count+1),hortis.writeLong(hortis.intKey,key),hash.set(hortis.intKey,0,hortis.intValue,0)},hortis.interactions.count=function(that,rows){const{plantTable:plantTable,pollTable:pollTable}=that,crossTable={},crossTableHash=new HashTable(8,4,1024,32768);rows.forEach((function(row){const{pollinatorINatId:pollId,plantINatId:plantId}=row;if(plantId&&pollId){const key=hortis.intIdsToKey(plantId,pollId);hortis.addCount(crossTable,key),hortis.addHashCount(crossTableHash,key),hortis.addCount(plantTable,plantId),hortis.addCount(pollTable,pollId)}}));const cells=Object.keys(crossTable).length,plants=Object.keys(plantTable).length,polls=Object.keys(pollTable).length;return console.log("Counted ",rows.length+" obs into "+cells+" interaction cells for "+plants+" plants and "+polls+" pollinators"),console.log("Occupancy: "+(cells/(plants*polls)*100).toFixed(2)+"%"),that.crossTableHash=crossTableHash,crossTable},fluid.defaults("hortis.drawInteractions",{gradeNames:"fluid.viewComponent",tooltipKey:"hoverCellKey",selectors:{plantNames:".imerss-plant-names",plantCounts:".imerss-plant-counts",pollNames:".imerss-poll-names",pollCounts:".imerss-poll-counts",interactions:".imerss-interactions",scroll:".imerss-int-scroll",hoverable:".imerss-int-label"},squareSize:16,squareMargin:2,fillStops:hortis.libreMap.natureStops,fillOpacity:.7,memoStops:"@expand:fluid.colour.memoStops({that}.options.fillStops, 32)",outlineColour:"black",listeners:{"onCreate.bindEvents":"hortis.drawInteractions.bindEvents","onCreate.bindTaxonHover":"hortis.bindTaxonHover({that}, {layoutHolder})"},invokers:{renderTooltip:"hortis.renderInteractionTooltip({that}, {arguments}.0)"},members:{hoverCellKey:"@expand:signal(null)",subscribeRender:"@expand:hortis.subscribeRender({that}, \n            {interactions}.crossTable,\n            {interactions}.plantSelection,\n            {interactions}.pollSelection,\n            {taxa}.rowById)",subscribeHover:"@expand:hortis.subscribeHover({that})"},components:{pollTooltips:{container:"{that}.dom.pollCounts",type:"hortis.histoTooltips",options:{counts:"pollCounts"}},plantTooltips:{container:"{that}.dom.plantCounts",type:"hortis.histoTooltips",options:{counts:"plantCounts"}}}}),fluid.defaults("hortis.histoTooltips",{gradeNames:"fluid.viewComponent",tooltipKey:"hoverId",selectors:{hoverable:".imerss-int-count"},members:{hoverId:"@expand:signal(null)",subscribeHover:"@expand:hortis.subscribeHover({that})"},invokers:{renderTooltip:"hortis.renderHistoTooltip({that}, {arguments}.0, {drawInteractions})"},listeners:{"onCreate.bindHistoHover":"hortis.bindHistoHover"}}),hortis.bindHistoHover=function(that){const hoverable=that.options.selectors.hoverable;that.container.on("mouseenter",hoverable,(function(e){const id=this.dataset.rowId;that.hoverEvent=e,that.hoverId.value=id})),that.container.on("mouseleave",hoverable,(function(){that.hoverId.value=null}))},hortis.renderHistoTooltip=function(that,id,interactions){const count=interactions[that.options.counts].counts[id];return`<div class="imerss-int-tooltip"><div><i>${interactions.taxa.rowById.value[id].iNaturalistTaxonName}</i>:</div><div>Observation count: ${count}</div></div>`},hortis.makePerm=function(table){return Object.entries(table).map(((entry,index)=>({id:entry[0],count:entry[1],index:index})))},hortis.subscribeRender=function(that,crossTableSignal,plantSelectionSignal,pollSelectionSignal,rowByIdSignal){return effect((()=>{const crossTable=crossTableSignal.value,plantSelection=plantSelectionSignal.value,pollSelection=pollSelectionSignal.value,rowById=rowByIdSignal.value;hortis.drawInteractions.render(that,{crossTable:crossTable,plantSelection:plantSelection,pollSelection:pollSelection,rowById:rowById})}))},hortis.drawInteractions.render=function(that,model){const{crossTableHash:crossTableHash,plantTable:plantTable,pollTable:pollTable}=that.interactions,{plantSelection:plantSelection,pollSelection:pollSelection,rowById:rowById}=model,{squareSize:squareSize,squareMargin:squareMargin}=that.options,now=Date.now(),filteredPlant=plantSelection?fluid.filterKeys(plantTable,Object.keys(plantSelection)):plantTable,plantPerm=hortis.makePerm(filteredPlant),filteredPoll=pollSelection?fluid.filterKeys(pollTable,Object.keys(pollSelection)):pollTable,pollPerm=hortis.makePerm(filteredPoll),canvas=that.locate("interactions")[0],ctx=canvas.getContext("2d"),side=squareSize-2*squareMargin;ctx.lineWidth=10;const plantCounts={counts:{},max:0},pollCounts={counts:{},max:0};plantPerm.forEach((function(plantRec){const plantId=plantRec.id;pollPerm.forEach((function(pollRec){const pollId=pollRec.id,key=hortis.intIdsToKey(plantId,pollId),count=hortis.getHashCount(crossTableHash,key);void 0!==count&&(hortis.addCount(plantCounts.counts,plantId,count),hortis.addCount(pollCounts.counts,pollId,count))}))})),plantCounts.max=hortis.max(plantCounts.counts),pollCounts.max=hortis.max(pollCounts.counts);const filterZero=function(perm,counts){fluid.remove_if(perm,(rec=>void 0===counts[rec.id])),perm.sort(((ea,eb)=>counts[eb.id]-counts[ea.id]))},filterCutoff=function(perm,counts,sizeLimit,countLimit){if(perm.length>=sizeLimit){const cutIndex=perm.findIndex((entry=>counts[entry.id]<countLimit));-1!==cutIndex&&cutIndex>=sizeLimit&&(perm.length=cutIndex)}};filterZero(plantPerm,plantCounts.counts),filterZero(pollPerm,pollCounts.counts),filterCutoff(plantPerm,plantCounts.counts,100,5),filterCutoff(pollPerm,pollCounts.counts,100,5),that.plantPerm=plantPerm,that.pollPerm=pollPerm,that.plantCounts=plantCounts,that.pollCounts=pollCounts;const cellTable=[],cellMax=hortis.maxReducer(),cellMin=hortis.minReducer();plantPerm.forEach((function(plantRec,plantIndex){const plantId=plantRec.id;pollPerm.forEach((function(pollRec,pollIndex){const pollId=pollRec.id,key=hortis.intIdsToKey(plantId,pollId),count=hortis.getHashCount(crossTableHash,key);if(void 0!==count){const scaled=count/Math.sqrt(plantCounts.counts[plantId]*pollCounts.counts[pollId]);cellMax.reduce(scaled),cellMin.reduce(scaled),cellTable.push({scaled:scaled,plantIndex:plantIndex,pollIndex:pollIndex})}}))}));const delay=Date.now()-now;console.log("Computed celltable in "+delay+" ms");const now2=Date.now(),width=pollPerm.length*squareSize+2*squareMargin,height=plantPerm.length*squareSize+2*squareMargin;canvas.width=width,canvas.height=height,ctx.fillStyle="white",ctx.fillRect(0,0,width,height);const xPos=index=>index*squareSize+squareMargin,yPos=index=>index*squareSize+squareMargin;cellTable.forEach((function(cell){const{scaled:scaled,plantIndex:plantIndex,pollIndex:pollIndex}=cell,prop=(scaled-cellMin.value)/(cellMax.value-cellMin.value),colour=fluid.colour.lookupStop(that.options.memoStops,prop),xywh=[xPos(pollIndex),yPos(plantIndex),side,side];ctx.fillStyle=colour,ctx.fillRect.apply(ctx,xywh),ctx.strokeStyle=that.options.outlineColour,ctx.strokeRect.apply(ctx,xywh)})),console.log("Celltable draw at  "+(Date.now()-now2)+" ms");const plantNames=that.locate("plantNames")[0];plantNames.style.height=height;const plantMark=plantPerm.map((function(rec,plantIndex){const plantId=rec.id,row=rowById[plantId];return`<div class="imerss-int-label" data-row-id="${plantId}" style="top: ${yPos(plantIndex)+0}px">${row.iNaturalistTaxonName}</div>`}));plantNames.innerHTML=plantMark.join("\n");const plantCountNode=that.locate("plantCounts")[0];plantCountNode.style.height=height;const plantCountMark=plantPerm.map((function(rec,plantIndex){const plantId=rec.id,count=plantCounts.counts[plantId],prop=fluid.roundToDecimal(95.83333333333334*count/plantCounts.max,2);return`<div class="imerss-int-count" data-row-id="${plantId}" style="top: ${yPos(plantIndex)+0}px; width: ${prop}%; height: ${side}px;"></div>`}));plantCountNode.innerHTML=plantCountMark.join("\n");const pollNames=that.locate("pollNames")[0];pollNames.style.width=width;const pollMark=pollPerm.map((function(rec,pollIndex){const pollId=rec.id,row=rowById[pollId];return`<div class="imerss-int-label" data-row-id="${pollId}" style="left: ${xPos(pollIndex)+-.75}px">${row.iNaturalistTaxonName}</div>`}));pollNames.innerHTML=pollMark.join("\n");const pollCountNode=that.locate("pollCounts")[0];pollCountNode.style.width=`${width}px`;const pollCountMark=pollPerm.map((function(rec,pollIndex){const pollId=rec.id,count=pollCounts.counts[pollId],prop=fluid.roundToDecimal(95.83333333333334*count/pollCounts.max,2);return`<div class="imerss-int-count" data-row-id="${pollId}" style="left: ${xPos(pollIndex)+-.75}px; height: ${prop}%; width: ${side}px;"></div>`}));pollCountNode.innerHTML=pollCountMark.join("\n");const delay2=Date.now()-now2;console.log("Rendered in "+delay2+" ms")},hortis.interactionTooltipTemplate='<div class="imerss-tooltip">\n    <div class="imerss-photo" style="background-image: url(%imgUrl)"></div>" +\n    <div class="text"><b>%taxonRank:</b> %taxonNames</div>" +\n    </div>',hortis.renderInteractionTooltip=function(that,cellKey){const{plantId:plantId,pollId:pollId}=hortis.keyToIntIds(cellKey),plantName=that.taxa.rowById.value[plantId].iNaturalistTaxonName;return`<div class="imerss-int-tooltip"><div><i>${that.taxa.rowById.value[pollId].iNaturalistTaxonName}</i> on </div><div><i>${plantName}</i>:</div><div>Count: ${that.interactions.crossTable.value[cellKey]}</div></div>`},hortis.drawInteractions.bindEvents=function(that){const crossTable=that.interactions.crossTable,plantNames=that.locate("plantNames")[0],plantCounts=that.locate("plantCounts")[0],pollNames=that.locate("pollNames")[0],pollCounts=that.locate("pollCounts")[0],scroll=that.locate("scroll")[0];scroll.addEventListener("scroll",(function(){const scrollTop=scroll.scrollTop;plantNames.scrollTop=scrollTop,plantCounts.scrollTop=scrollTop;const scrollLeft=scroll.scrollLeft;pollNames.scrollLeft=scrollLeft,pollCounts.scrollLeft=scrollLeft})),plantNames.addEventListener("scroll",(function(){scroll.scrollTop=plantNames.scrollTop}));const canvas=that.locate("interactions")[0],{squareSize:squareSize,squareMargin:squareMargin}=that.options,buff=squareMargin/squareSize;canvas.addEventListener("mousemove",(function(e){const xc=e.offsetX/squareSize,yc=e.offsetY/squareSize,xb=xc%1,yb=yc%1;if(xb>=buff&&xb<=1-buff&&yb>=buff&&yb<=1-buff){const pollId=that.pollPerm?.[Math.floor(xc)]?.id,plantId=that.plantPerm?.[Math.floor(yc)]?.id,key=hortis.intIdsToKey(plantId,pollId),crossCount=crossTable.value[key];that.hoverEvent=e,that.hoverCellKey.value=crossCount?key:null}else that.hoverCellKey.value=null})),canvas.addEventListener("mouseleave",(()=>that.hoverCellKey.value=null))},hortis.WGS84a=6378137,hortis.WGS84b=6356752.3142,hortis.WGS84e2=(hortis.WGS84a*hortis.WGS84a-hortis.WGS84b*hortis.WGS84b)/(hortis.WGS84a*hortis.WGS84a),hortis.longitudeLength=function(latitude){const latrad=Math.PI*latitude/180,sinrad=Math.sin(latrad);return Math.PI*hortis.WGS84a*Math.cos(latrad)/(180*Math.sqrt(1-hortis.WGS84e2*sinrad*sinrad))},hortis.latitudeLength=function(latitude){const latrad=Math.PI*latitude/180,sinrad=Math.sin(latrad);return Math.PI*hortis.WGS84a*(1-hortis.WGS84e2)/(180*Math.pow(1-hortis.WGS84e2*sinrad*sinrad,1.5))},hortis.longToLat=function(lng,lat){return lng*hortis.longitudeLength(lat)/hortis.latitudeLength(lat)},fluid.registerNamespace("hortis.obsQuantiser"),hortis.obsQuantiser.initGrid=function(){const grid={};return grid.bounds=hortis.initBounds(),grid.maxCount=0,grid.buckets={},grid},fluid.defaults("hortis.obsQuantiser",{gradeNames:"fluid.modelComponent",members:{baseLatitude:"@expand:signal(37.5)",longResolution:"@expand:signal(0.005)",latResolution:"@expand:fluid.computed(hortis.longToLat, {that}.longResolution, {that}.baseLatitude)",grid:{expander:{funcName:"fluid.computed",args:["hortis.obsQuantiser.indexObs","{vizLoader}.finalFilteredObs","{that}.latResolution","{that}.longResolution"]}}}}),hortis.obsQuantiser.indexToCoord=function(index,latres,longres){const coords=index.split("|");return[coords[0]*latres,coords[1]*longres]},hortis.obsQuantiser.coordToIndex=function(lat,long,latres,longres){return Math.floor(lat/latres)+"|"+Math.floor(long/longres)},hortis.obsQuantiser.indexObs=function(rows,latRes,longRes){const grid=hortis.obsQuantiser.initGrid(),now=Date.now();rows.forEach((function(row,index){const coordIndex=hortis.obsQuantiser.coordToIndex(row.decimalLatitude,row.decimalLongitude,latRes,longRes);hortis.updateBounds(grid.bounds,row.decimalLatitude,row.decimalLongitude);let bucket=grid.buckets[coordIndex];bucket||(bucket=grid.buckets[coordIndex]={count:0,byTaxonId:{},plantByTaxonId:{}}),bucket.count++,grid.maxCount=Math.max(grid.maxCount,bucket.count),fluid.pushArray(bucket.byTaxonId,row.pollinatorINatId,index),fluid.pushArray(bucket.plantByTaxonId,row.plantINatId,index)})),rows.length>0&&hortis.expandBounds(grid.bounds,.1);const delay=Date.now()-now;return console.log("Gridded "+rows.length+" rows in "+delay+" ms: "+delay/rows.length*1e3+" us/row"),grid},fluid.defaults("hortis.libreObsMap",{gradeNames:["hortis.libreMap","hortis.libreMap.withObsGrid"],components:{obsQuantiser:{type:"hortis.obsQuantiser",options:{members:{longResolution:"@expand:signal(0.075)"}}}}}),fluid.defaults("hortis.demoLibreMap",{gradeNames:["hortis.libreObsMap","hortis.libreMap.withTiles","hortis.libreMap.streetmapTiles","hortis.libreMap.usEcoL3Tiles"]});hortis=fluid.registerNamespace("hortis");fluid.defaults("hortis.autocomplete",{gradeNames:["fluid.newViewComponent"],listeners:{"onCreate.render":"hortis.autocomplete.render"},events:{onConfirm:null},maxSuggestions:20,invokers:{query:"hortis.autocomplete.emptyQuery",renderSuggestion:"fluid.identity",renderInputValue:"fluid.identity"},widgetOptions:{displayMenu:"overlay"}}),hortis.autocomplete.emptyQuery=function(query,callback){callback("")},hortis.autocomplete.render=function(that){const widgetOptions=$.extend({element:that.container[0],id:that.options.id,source:that.query,templates:{suggestion:that.renderSuggestion,inputValue:that.renderInputValue},onConfirm:that.events.onConfirm.fire},that.options.widgetOptions);that.widget=accessibleAutocomplete(widgetOptions),$("input",that.container).attr("spellcheck",!1)};hortis=fluid.registerNamespace("hortis");fluid.defaults("hortis.tabs",{gradeNames:["fluid.viewComponent"],tabOptions:{},model:{selectedTab:null},listeners:{"onCreate.initTabs":{this:"{that}.container",method:"tabs",args:"{that}.options.tabOptions"},"onCreate.bindEvents":{funcName:"hortis.tabs.bindEvents"}}}),hortis.tabs.findTab=function(that,tabId){return fluid.find(that.options.tabIds,(function(id,key){return id===tabId?key:void 0}))},hortis.tabs.bindEvents=function(that){that.container.on("tabsactivate",(function(event,ui){const tabId=ui.newTab.find("a").attr("href").substring(1),tab=hortis.tabs.findTab(that,tabId);that.applier.change("selectedTab",tab)}));const initialIndex=Object.keys(that.options.tabIds).indexOf(that.model.selectedTab);-1!==initialIndex&&that.container.tabs("option","active",initialIndex)};hortis=fluid.registerNamespace("hortis");var{signal:signal,effect:effect}=preactSignalsCore;hortis.sppAnnotations=["agg.","aff.","s.lat.","cf","sp.nov.","var.","sp.","ssp.","spp.","complex"],hortis.annoteRegex=new RegExp("("+hortis.sppAnnotations.map((annot=>annot.replace(".","\\."))).join("|")+")","g"),hortis.renderSpeciesName=function(name){return name.replace(hortis.annoteRegex,'<span class="checklist-annote">$1</span>')},hortis.checklistCheckbox=function(rowid){return`\n    <span class="pretty p-icon">\n      <input type="checkbox" class="checklist-check" ${rowid}/>\n      <span class="state p-success">\n        <i class="icon mdi mdi-check"></i>\n        <label></label>\n      </span>\n    </span>`},hortis.encodeHTML=function(str){return str.replace(/[&<>'"]/g,(function(tag){return{"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[tag]}))},hortis.checklistItem=function(entry,selectedId,simple,selectable){const record=entry.row,rowid=' data-row-id="'+record.id+'"',rank=!record.rank||simple&&record.taxonName?"species":record.rank,header="<li "+("species"===rank&&record.id===selectedId?' class="checklist-selected"':"")+">";let name="<p "+rowid+' class="checklist-rank-'+rank+'">'+("species"===rank?hortis.renderSpeciesName:fluid.identity)(hortis.encodeHTML(hortis.rowToScientific(record)))+"</p>";record.commonName&&(name+=" - <p "+rowid+' class="checklist-common-name">'+record.commonName+"</p>");const hulqName=record["Hulquminum Name"];hulqName&&(name+=" - <p "+rowid+' class="checklist-hulq-name"><em>'+hulqName+"</em></p>");const subList=hortis.checklistList(entry.children,selectedId,simple,selectable);return header+(selectable?hortis.checklistCheckbox(rowid):"")+name+subList+"</li>"},hortis.checklistList=function(entries,selectedId,simple,selectable){return entries.length?"<ul>"+entries.map((function(entry){return hortis.checklistItem(entry,selectedId,simple,selectable)})).join("")+"</ul>":""},hortis.checklistRowForId=function(container,id){return container.find("[data-row-id="+id+"]").closest("li")},hortis.updateChecklistSelection=function(container,newSelectedId,oldSelectedId,rowById){if(null===newSelectedId)return;hortis.checklistRowForId(container,oldSelectedId).removeClass("checklist-selected");const row=rowById[newSelectedId];if(row&&row.species){hortis.checklistRowForId(container,newSelectedId).addClass("checklist-selected")}},hortis.alwaysRejectRanks=[],hortis.acceptChecklistRowAS=function(row,filterRanks,rowFocus){const acceptBasic=!filterRanks||filterRanks.includes(row.rank)||row.species,alwaysReject=hortis.alwaysRejectRanks.includes(row.rank),rejectSpecies="species"===row.rank&&row.children.length>0,acceptChecklist=row.taxonName;return rowFocus[row.id]&&(acceptBasic&&!rejectSpecies&&!alwaysReject||acceptChecklist)},hortis.rowToScientific=function(row){return row.taxonName||row.iNaturalistTaxonName},hortis.scientificComparator=function(entrya,entryb){return hortis.rowToScientific(entrya.row)>hortis.rowToScientific(entryb.row)?1:-1},hortis.sortChecklistLevel=function(entries){return entries.sort(hortis.scientificComparator)},hortis.filterTaxonomy=function(rows,depth,acceptChecklistRow,filterTaxonomy,showRoot){const togo=[];return fluid.each(rows,(function(row){if(acceptChecklistRow(row)||0===depth&&showRoot)togo.push({row:row,children:filterTaxonomy(row.children,depth+1)});else{const dChildren=filterTaxonomy(row.children,depth+1);Array.prototype.push.apply(togo,dChildren)}})),hortis.sortChecklistLevel(togo)},hortis.SELECTED=1,hortis.UNSELECTED=0,hortis.INDETERMINATE=-1,fluid.defaults("hortis.checklist",{gradeNames:["hortis.withPanelLabel","fluid.viewComponent"],filterRanks:!1,showRoot:!1,selectable:!1,selectors:{hoverable:"p",checklist:".imerss-checklist"},invokers:{acceptChecklistRow:{funcName:"hortis.acceptChecklistRowAS",args:["{arguments}.0","{that}.options.filterRanks","{that}.rowFocus.value"]},filterTaxonomy:{funcName:"hortis.filterTaxonomy",args:["{arguments}.0","{arguments}.1","{that}.acceptChecklistRow","{that}.filterTaxonomy","{that}.options.showRoot"]},generateChecklist:{funcName:"hortis.checklist.generate",args:["{that}","{that}.dom.checklist","{layoutHolder}","{that}.filterTaxonomy","{that}.options.filterRanks","{arguments}.0"]},check:"hortis.checklist.check({that}, {arguments}.0, {arguments}.1)"},members:{idToState:"@expand:signal({})",rowSelection:"@expand:fluid.computed(hortis.checklist.checksToSelection, {checklist}.idToState, {checklist}.rowFocus, {checklist}.allRowFocus)",subscribeChecks:"@expand:hortis.checklist.subscribeChecks({that}.idToState, {that})",subscribeSelected:"@expand:hortis.checklist.subscribeSelected({that}, {that}.selectedId, {that}.rowById)",subscribeGenerate:"@expand:hortis.checklist.subscribeGenerate({that}, {that}.rootId, {that}.selectedId, {that}.rowFocus, {that}.rowById)"},listeners:{"onCreate.bindTaxonHover":"hortis.bindTaxonHover({that}, {layoutHolder})","onCreate.bindCheckboxClick":"hortis.checklist.bindCheckboxClick({that})"}}),hortis.checklist.bindCheckboxClick=function(checklist){checklist.container.on("click",".pretty input",(function(){const id=this.dataset.rowId;console.log("Checkbox clicked with row "+id),checklist.check(id,this.checked)}))},hortis.checklist.subscribeChecks=function(idToStateSignal,checklist){let oldIdToState;return effect((()=>{const newIdToState=idToStateSignal.value;fluid.each(newIdToState,((newState,id)=>{newState!==oldIdToState[id]&&hortis.checklist.stateToCheck(checklist,newState,id)})),oldIdToState=newIdToState}))},hortis.checklist.subscribeSelected=function(that,selectedIdSignal,rowByIdSignal){let oldSelectedId;return effect((()=>{const newSelectedId=selectedIdSignal.value;hortis.updateChecklistSelection(that.container,newSelectedId,oldSelectedId,rowByIdSignal.peek()),oldSelectedId=newSelectedId}))},hortis.checklist.subscribeGenerate=function(that,rootIdSignal,selectedIdSignal,rowFocusSignal,rowByIdSignal){return effect((()=>{const model={rootId:rootIdSignal.value,selectedId:selectedIdSignal.value,rowFocus:rowFocusSignal.value,rowById:rowByIdSignal.value};that.generateChecklist(model)}))},hortis.checklist.stateToCheck=function(checklist,state,id){const node=checklist.idToNode?.[id];if(node){node.checked=state===hortis.SELECTED,node.indeterminate=state===hortis.INDETERMINATE;const ui=node.closest(".p-icon").querySelector(".icon");$(ui).toggleClass("mdi-check",state!==hortis.INDETERMINATE)}},hortis.checklist.generate=function(that,element,layoutHolder,filterTaxonomy,simple,model){const{rootId:rootId,selectedId:selectedId,rowFocus:rowFocus,rowById:rowById}=model,selectable=that.options.selectable;console.log("Generating checklist for id "+rootId);const filteredEntries=filterTaxonomy(fluid.makeArray(rowById[rootId]),0);if(that.rootEntry={row:{id:hortis.checklist.ROOT_ID},children:filteredEntries},selectable){const{idToEntry:idToEntry,idToState:idToState}=hortis.checklist.computeInitialModel(that.rootEntry,rowFocus);that.idToEntry=idToEntry,that.idToState.value=idToState}const markup=hortis.checklistList(filteredEntries,selectedId,simple,selectable);if(element[0].innerHTML=markup,selectable){const checks=element[0].querySelectorAll(".checklist-check"),idToNode={};checks.forEach((check=>idToNode[check.dataset.rowId]=check)),that.idToNode=idToNode}},hortis.checklist.allChildrenState=function(idToState,entry,state){return void 0===entry.children.find((child=>idToState[child.row.id]!==state))},hortis.checklist.check=function(checklist,id,checked){const idToStateUp={...checklist.idToState.value},upState=checked?hortis.SELECTED:hortis.UNSELECTED,entry=checklist.idToEntry[id],setChildState=function(entry,state){idToStateUp[entry.row.id]=state,entry.children.forEach((child=>setChildState(child,state)))};setChildState(entry,upState);let parent=entry.parent;for(;parent;){const allChildrenState=hortis.checklist.allChildrenState(idToStateUp,parent,upState);idToStateUp[parent.row.id]=allChildrenState?upState:hortis.INDETERMINATE,parent=parent.parent}checklist.idToState.value=idToStateUp},hortis.checklist.ROOT_ID=Number.NEGATIVE_INFINITY,hortis.checklist.computeInitialModel=function(rootEntry,rowFocus){const idToState={},idToEntry={},indexEntry=function(entry,parent){const id=entry.row.id;id?rowFocus[id]&&(idToState[id]=hortis.UNSELECTED,idToEntry[id]=entry):console.log("Warning, discarding row ",entry.row," without id set"),entry.parent=parent,entry.children.forEach((childEntry=>indexEntry(childEntry,entry)))};return indexEntry(rootEntry),{idToEntry:idToEntry,idToState:idToState}},fluid.defaults("hortis.checklist.withHolder",{gradeNames:["hortis.layoutHolder","hortis.checklist"]}),hortis.checklist.checksToSelection=function(idToState,rowFocus,allRowFocus){const selection={};let selected=0;fluid.each(idToState,((state,key)=>{state===hortis.SELECTED&&(++selected,selection[key]=!0)}));const anyRowFocus=!$.isEmptyObject(rowFocus);return 0===selected?anyRowFocus?{...rowFocus}:allRowFocus:selection};
//# sourceMappingURL=imerss-viz-new.js.map